$regfile = "m88def.dat"                                     'говорим компилятору что у нас микропроцессор Atmega 88
$crystal = 8000000                                          'говорим компилятору что процессор тактируется от генератора с частотой 7,372800 мегагерц

'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'Задаем константы
Const Старт_шим = 255                                       'величина ШИМ при стартовом импульсе ' 0=0%, 255=100%, 13=5%...
Const Время_до_торможения = 2                               'время после отключения ШИМ и перед началом динамического торможения чтобы избежать больших токов в обмотках двигателя и на контактах реле. 1 единица = 0,5 сек. Так 2единицы = 1 секунде
Const Период_пищалки = 830                                  'чемь меньше, тем выше тон. Период равен кол-ву импульсов кварца
Const Период_писка_оконч_реж = 830
Const Длит_писка_оконч_реж = 1000
Const Верх_шима = 255
Const Низ_шима = 0
Const Шаг_шима = 15

'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'Конфигурация ног, таймеров, прерываний от кнопок, настройка ШИМ, объявление переменных:
Ddrd = &B11100000 : Portd = &B00011111 : Ddrb = &B11111111 : Portb = 1 : Ddrc = 0 : Portc = &B11110001       'Конфигурация портов, включение внутренних подтягивающих резисторов
Relay1 Alias Portb.1 : Relay2 Alias Portb.2 : Speaker Alias Portc.4       'называем пины как нам удобно
Enable Interrupts : Pcmsk2 = &B00000010 : Pcmsk0 = &B00000001 : On Pcint0 Buttons : Enable Pcint0 : On Pcint2 Buttons : Enable Pcint2       ' Разрешаем прерывание на кнопки. При нажатии любой кнопки переходим на подпрограмму   Buttons
Set Tccr0a.com0a1 : Set Tccr0a.wgm00 : Set Tccr0b.cs01      'конфигурация ШИМ на PD.6
Config Adc = Single , Prescaler = Auto , Reference = Avcc   'конфигурация АЦП
Config Clock = Soft                                         'включение таймера для возможности оперирования временными переменными
Dim Работает As Bit , Пропустить As Bit , Общее_время_режима As Long , Остановка As Bit , Направление As Bit , T(9) As Integer , Fwd As Bit , Rev As Bit , Скорость1 As Integer , Скорость2 As Integer       ' объявляем переменные

'-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'объявляем функции обработки событий
Declare Sub Какое_направление
Declare Sub Выполнить_торможение
Declare Sub Собрать_схему
Declare Sub Запустить_двигатель
Declare Sub Налево
Declare Sub Направо
Declare Sub Режим1
Declare Sub Выполнить_ускорение
Declare Sub Считать_время_работы
Declare Sub Крутить_двигатель
Declare Sub Считать_скорость1

'-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'Основная часть программы:
Sound Speaker , 100 , Период_пищалки                        ' Пищим 1 секунду после включения
Waitms 100
Start Adc
T(7) = 1                                                    'время отсрочки запуска, в с.
T(8) = 3                                                    'время стартового импульса, в с.
T(9) = 7                                                    'время торможения, в с.

Do
If Работает = 0 Then
Debounce Pind.1 , 0 , Налево , Sub
Debounce Pinb.0 , 0 , Направо , Sub
End If
Loop

'---------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Налево:
Set Fwd : Reset Rev : Режим1
End Sub

'---------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Направо:
Reset Fwd : Set Rev : Режим1
End Sub

'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Режим1
Waitms 75                                                   'решаем проблему дребезга контактов
Sound Speaker , 100 , Период_пищалки
Wait T(7)                                                   'ждем перед запуском
Set Работает
Считать_время_работы
Какое_направление
Собрать_схему
Выполнить_ускорение
Sound Speaker , 100 , Период_пищалки
Крутить_двигатель
Выполнить_торможение
Reset Пропустить
Reset Работает
End Sub

'------------------------------------------------------------------------------------------------------------------------------------------------------------
'обработка прерывания кнопок
Buttons:
Waitms 75                                                   'решаем проблему дребезга конактов
If Работает = 1 Then
Set Остановка
End If
Return

'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Какое_направление
Направление = Fwd : Fwd = 0 : Rev = Fwd                     ' определяем направление.
End Sub

'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Собрать_схему
If Пропустить = 0 Then                                      'В случае если нажата любая из кнопок для быстрой остановки пропускаем все функции и останавливаемся. Выходить из подпрограмм оператором GOTO нельзя.
Остановка = 0
Ocr0a = 0 : Delay                                           ' ШИМ=0 и краткая задержка перед сборкой схемы. Строка на всякий случай.
If Направление = 1 Then : Set Relay1 : Reset Relay2 : Else : Set Relay2 : Reset Relay1 : End If       ' включаем реле (собираем схему прямого или обратного пуска)
Waitms 500
End If
End Sub

'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Выполнить_ускорение
Local Текущий_режим As Byte
If Пропустить = 0 Then
Текущий_режим = Низ_шима
Do
If Остановка = 1 Then : Call Выполнить_торможение : Set Пропустить : Exit Do : End If       'остановка при нажатии кнопок
Текущий_режим = Текущий_режим + Шаг_шима
If Текущий_режим >= Верх_шима Then : Exit Do : End If
Ocr0a = Текущий_режим
Waitms 235
Loop
End If
End Sub

'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Выполнить_торможение
If Пропустить = 0 Then
Ocr0a = 0 :
Sound Speaker , Длит_писка_оконч_реж , Период_писка_оконч_реж
Waitms Время_до_торможения : Reset Relay1 : Reset Relay2    'выключаем все и запускаем динамическое торможение
Wait T(9)                                                   ' ждем Tc до полной остановки. На дисплее все также отображается статичная " - "
Sound Speaker , 100 , Период_пищалки
End If
End Sub

'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Крутить_двигатель
Local Количество_циклов As Long : Local Прошло_секунд As Long
Количество_циклов = 0
If Пропустить = 0 Then
Do
Считать_скорость1
Ocr0a = Скорость1
If Остановка = 1 Then : Exit Do : End If
Waitms 100
Количество_циклов = Количество_циклов + 1
Прошло_секунд = Количество_циклов / 10
Loop Until Прошло_секунд >= Общее_время_режима
End If
End Sub

'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Считать_время_работы
Общее_время_режима = Getadc(3)
Общее_время_режима = Общее_время_режима * 1000
Общее_время_режима = Общее_время_режима / 1705
Общее_время_режима = Общее_время_режима + 3                 'минимальное время 3секунды
End Sub

'--------------------------------------------------------------------------------------------------------------------------------------------------------------
Sub Считать_скорость1
Скорость1 = Getadc(2) / 4
End Sub